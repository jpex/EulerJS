/**
 * Highly divisible triangular number
 * Problem 12
 *
 *   The sequence of triangle numbers is generated by adding the natural 
 *   numbers. So the 7th triangle number would be 
 *   1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 *     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 *   Let us list the factors of the first seven triangle numbers:
 *
 *     1:  1
 *     3:  1,3
 *     6:  1,2,3,6
 *     10: 1,2,5,10
 *     15: 1,3,5,15
 *     21: 1,3,7,21
 *     28: 1,2,4,7,14,28
 *
 *   We can see that 28 is the first triangle number to have over five divisors.
 *   What is the value of the first triangle number to have over five hundred divisors?
 *
 * Excerpt: https://projecteuler.net/problem=12
**/

(function() {

  var n = getFactorCount(500);
  outputAnswer((n*(n + 1)/2)); /* Formula for 1 + 2 + 3 + ... + n */

  function getFactorCount(desired) {
    var count = 0, i;

    /**  
     *  Finds the number of factors based on whether or not the nth number
     *   is odd or even.
    **/
    for (i = 0; count <= desired; i++) {
      if (i % 2 === 0) count = factor(i/2) * factor(i + 1);
      else count = factor(i) * factor((i + 1)/2);
      if (count > desired) return i;
    }

  }

  /**  
   *  Function: funct
   *   Returns the factor count of the passed in value.
  **/
  function factor(n) {
    var result = 0, i;
    for (i = 1; i * i <= n; i++) {
      if (n % i === 0) {
        result += 2;
        if (n/i === i) result--;
      }
    }
    return result;
  }

})();

/**
 *  Originally using a brute force method, this much faster method uses
 *   coprimes to determine any natural number. It sorts through each number
 *   in the natural series until it finds one with 500 factors.
**/